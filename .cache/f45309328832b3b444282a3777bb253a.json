{"dependencies":[{"name":"/opt/lampp/htdocs/oclock/testsymforeact/.babelrc","includedInParent":true,"mtime":1530343431703},{"name":"/opt/lampp/htdocs/oclock/testsymforeact/package.json","includedInParent":true,"mtime":1530347259703},{"name":"/opt/lampp/htdocs/oclock/testsymforeact/.browserslistrc","includedInParent":true,"mtime":1530343431703}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * État initial pour le state de l'application\n */\nvar initialState = {};\n\n/**\n * Reducer de l'application\n */\nvar reducer = function reducer() {\n  var currentState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case 'GENERATE_RANDOM_VALUE':\n      return _extends({}, currentState, {\n        value: action.value\n      });\n\n    default:\n      return currentState;\n  }\n};\n\nexports.default = reducer;","map":{"mappings":[{"generated":{"line":9,"column":0},"source":"store/reducer.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"store/reducer.js","original":{"line":4,"column":0}},{"name":"initialState","generated":{"line":12,"column":4},"source":"store/reducer.js","original":{"line":4,"column":6}},{"generated":{"line":12,"column":19},"source":"store/reducer.js","original":{"line":4,"column":21}},{"generated":{"line":12,"column":21},"source":"store/reducer.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"store/reducer.js","original":{"line":6,"column":0}},{"generated":{"line":17,"column":0},"source":"store/reducer.js","original":{"line":9,"column":0}},{"name":"reducer","generated":{"line":17,"column":4},"source":"store/reducer.js","original":{"line":9,"column":6}},{"generated":{"line":17,"column":14},"source":"store/reducer.js","original":{"line":9,"column":16}},{"name":"reducer","generated":{"line":17,"column":23},"source":"store/reducer.js","original":{"line":9,"column":6}},{"generated":{"line":17,"column":30},"source":"store/reducer.js","original":{"line":9,"column":16}},{"generated":{"line":17,"column":33},"source":"store/reducer.js","original":{"line":9,"column":62}},{"generated":{"line":18,"column":0},"source":"store/reducer.js","original":{"line":9,"column":62}},{"name":"currentState","generated":{"line":18,"column":6},"source":"store/reducer.js","original":{"line":9,"column":17}},{"generated":{"line":18,"column":18},"source":"store/reducer.js","original":{"line":9,"column":62}},{"name":"initialState","generated":{"line":18,"column":89},"source":"store/reducer.js","original":{"line":9,"column":32}},{"generated":{"line":18,"column":101},"source":"store/reducer.js","original":{"line":9,"column":62}},{"generated":{"line":19,"column":0},"source":"store/reducer.js","original":{"line":9,"column":62}},{"name":"action","generated":{"line":19,"column":6},"source":"store/reducer.js","original":{"line":9,"column":46}},{"generated":{"line":19,"column":12},"source":"store/reducer.js","original":{"line":9,"column":62}},{"generated":{"line":19,"column":83},"source":"store/reducer.js","original":{"line":9,"column":55}},{"generated":{"line":19,"column":85},"source":"store/reducer.js","original":{"line":9,"column":62}},{"generated":{"line":21,"column":0},"source":"store/reducer.js","original":{"line":10,"column":2}},{"name":"action","generated":{"line":21,"column":10},"source":"store/reducer.js","original":{"line":10,"column":10}},{"name":"type","generated":{"line":21,"column":17},"source":"store/reducer.js","original":{"line":10,"column":17}},{"generated":{"line":21,"column":21},"source":"store/reducer.js","original":{"line":10,"column":2}},{"generated":{"line":22,"column":0},"source":"store/reducer.js","original":{"line":11,"column":4}},{"generated":{"line":22,"column":9},"source":"store/reducer.js","original":{"line":11,"column":9}},{"generated":{"line":22,"column":32},"source":"store/reducer.js","original":{"line":11,"column":4}},{"generated":{"line":23,"column":0},"source":"store/reducer.js","original":{"line":12,"column":6}},{"name":"currentState","generated":{"line":23,"column":26},"source":"store/reducer.js","original":{"line":13,"column":11}},{"generated":{"line":23,"column":38},"source":"store/reducer.js","original":{"line":12,"column":6}},{"name":"value","generated":{"line":24,"column":0},"source":"store/reducer.js","original":{"line":14,"column":8}},{"name":"action","generated":{"line":24,"column":15},"source":"store/reducer.js","original":{"line":14,"column":15}},{"name":"value","generated":{"line":24,"column":22},"source":"store/reducer.js","original":{"line":14,"column":22}},{"generated":{"line":25,"column":0},"source":"store/reducer.js","original":{"line":12,"column":6}},{"generated":{"line":27,"column":0},"source":"store/reducer.js","original":{"line":17,"column":4}},{"generated":{"line":28,"column":0},"source":"store/reducer.js","original":{"line":17,"column":13}},{"name":"currentState","generated":{"line":28,"column":13},"source":"store/reducer.js","original":{"line":17,"column":20}},{"generated":{"line":28,"column":25},"source":"store/reducer.js","original":{"line":17,"column":13}},{"generated":{"line":29,"column":0},"source":"store/reducer.js","original":{"line":10,"column":2}},{"generated":{"line":30,"column":0},"source":"store/reducer.js","original":{"line":19,"column":1}},{"generated":{"line":30,"column":1},"source":"store/reducer.js","original":{"line":9,"column":0}},{"name":"reducer","generated":{"line":32,"column":18},"source":"store/reducer.js","original":{"line":21,"column":15}}],"sources":{"store/reducer.js":"/**\n * État initial pour le state de l'application\n */\nconst initialState = {};\n\n/**\n * Reducer de l'application\n */\nconst reducer = (currentState = initialState, action = {}) => {\n  switch (action.type) {\n    case 'GENERATE_RANDOM_VALUE':\n      return {\n        ...currentState,\n        value: action.value,\n      };\n\n    default: return currentState;\n  }\n};\n\nexport default reducer;\n"},"lineCount":null}},"hash":"5590ca8e9a36324e519263f8c401e3e4","cacheData":{"env":{}}}